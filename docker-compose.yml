services:
  app-prod:
    build:
      dockerfile: Dockerfile
      context: .
        # Only will build production stage from our dockerfile
      target: production
    ports:
      - "${APP_PORT}:3000"
    networks:
      - backend
  app-dev:
    build:
      dockerfile: Dockerfile
      context: .
        # Only will build development stage from our dockerfile
      target: development
    volumes:
      - .:/home/go/sourcecode
      - ~/.ssh:/home/go/.ssh:ro
      - ../:/out
    depends_on:
      - mysql-service
      - oracle-service
      - mongodb-service
    networks:
      - backend
    ports:
      - "${GODOC_PORT}:6464"
      - "${APP_PORT}:3000"
      - "${COVER_TEST_PORT}:6767"
    command: godoc -http=:6464
  oracle-service:
    image: oracleinanutshell/oracle-xe-11g:1.0.0
    container_name: oracle-service
    restart: always
    ports:
      - "${ORACLE_PORT}:1521"
    networks:
      - backend
  mysql-service:
    image: mysql:5.7
    container_name: mysql-service
    restart: always
    volumes:
      - /mysql-db:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dbdev
      MYSQL_USER: default
      MYSQL_PASSWORD: secret
    platform: linux/amd64
  mongodb-service:
    image: mongo:6.0
    container_name: mongodb-service
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - /mongodb-service:/data/db
    networks:
      - backend
networks:
  backend:
    driver: bridge
